(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{374:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" docker")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker 从入门到实践"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[s._v("#")]),s._v(" install")]),s._v(" "),a("p",[a("strong",[s._v("shell")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s docker --mirror Aliyun\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG docker "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v("\n")])])]),a("p",[a("strong",[s._v("centos 8")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/ding2016/p/11592999.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("centos 8 安装docker"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce -y\nsystemctl start docker\n")])])]),a("h2",{attrs:{id:"container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[s._v("#")]),s._v(" container")]),s._v(" "),a("p",[s._v("操作容器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果从这个stdin中exit，会导致容器的停止")]),s._v("\ndocker attach 69d1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果从这个stdin中exit，不会导致容器的停止")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 69d1 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" 7691a814370e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ubuntu.tar\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入容器快照为镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ubuntu.tar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" - test/ubuntu:v1.0\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" http://example.com/exampleimage.tgz example/imagerepo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关机重启容器")]),s._v("\ndocker run --restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always\ndocker update --restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always\n")])])]),a("h2",{attrs:{id:"volume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[s._v("#")]),s._v(" volume")]),s._v(" "),a("p",[s._v("操作数据卷")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建数据卷")]),s._v("\ndocker volume create my-vol\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除数据卷")]),s._v("\ndocker volume "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" my-vol\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看信息")]),s._v("\ndocker volume inspect my-vol\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载数据卷")]),s._v("\n--mount "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("source")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-vol,target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/webapp\n--mount "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/src/webapp,target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/webapp,readonly\n")])])]),a("h2",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[s._v("#")]),s._v(" network")]),s._v(" "),a("p",[s._v("网络映射")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射所有接口地址")]),s._v("\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 nginx:alpine\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射到指定地址的指定端口")]),s._v("\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:80:80 nginx:alpine\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射到指定地址的任意端口")]),s._v("\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1::80 nginx:alpine\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看映射端口配置")]),s._v("\ndocker port 37bd "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n")])])]),a("p",[s._v("网络互联")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建网络")]),s._v("\ndocker network create -d bridge my-net\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行一个容器并连接到新建的网络")]),s._v("\ndocker run -it --rm --name busybox --network my-net busybox "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n")])])]),a("p",[s._v("配置容器DNS")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run -it --rm --dns"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("IP_ADDRESS ubuntu:18.04 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/resolv.conf\ndocker run -it --rm --dns-search"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("DOMAIN ubuntu:18.04 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/resolv.conf\n")])])]),a("p",[s._v("/etc/docker/daemon.json")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dns"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114.114.114.114"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8.8.8.8"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("配置主机名")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run -it --rm -h "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")]),s._v(" ubuntu:18.04 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/resolv.conf\ndocker run -it --rm --hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")]),s._v(" ubuntu:18.04 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/resolv.conf\n")])])]),a("h2",{attrs:{id:"repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repository"}},[s._v("#")]),s._v(" repository")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录")]),s._v("\ndocker login --username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("huxins@163.com --password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("password registry.com\ndocker login --username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("huxins@163.com --password-stdin registry.com\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送")]),s._v("\ndocker tag ubuntu:18.04 username/ubuntu:18.04\ndocker push username/ubuntu:18.04\n")])])]),a("p",[a("strong",[s._v("mirror")])]),s._v(" "),a("p",[s._v("https://xj9vwn9r.mirror.aliyuncs.com"),a("br"),s._v("\nhttps://mirror.ccs.tencentyun.com"),a("br"),s._v("\nhttps://055c43be31800fb50fb8c003c33df040.mirror.swr.myhuaweicloud.com")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n  "registry-mirrors": ["https://xj9vwn9r.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])])]),a("h2",{attrs:{id:"issues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issues"}},[s._v("#")]),s._v(" issues")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.kelu.org/tech/2018/07/14/docker-restart-net-after-iptable-f.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker iptable 清空后如何重置容器网络"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# iptables -t nat -F")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装brctl")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bridge-utils\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bridge-utils\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止docker服务")]),s._v("\nsystemctl stop docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重建 docker 网络")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" docker0 down\nbrctl delbr docker0\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker服务")]),s._v("\nsystemctl start docker\n")])])]),a("ul",[a("li",[s._v("删除none镜像")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除容器")]),s._v("\ndocker container "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker container "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -a -q -f "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("exited"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除镜像")]),s._v("\ndocker image "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker image "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),a("ul",[a("li",[s._v("配置文件")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container/",target:"_blank",rel:"noopener noreferrer"}},[s._v("修改已启动容器"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /var/lib/docker/containers/容器ID/hostconfig.json\n")])])]),a("ul",[a("li",[s._v("磁盘占用与清理")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看空间占用细节")]),s._v("\ndocker system "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v(" -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一并清除所有未被使用的镜像和悬空镜像")]),s._v("\ndocker system prune -a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制删除，不提示信息")]),s._v("\ndocker system prune -f\n")])])]),a("h2",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" dockerfile")]),s._v(" "),a("h3",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" copy")]),s._v(" "),a("p",[s._v("通配符规则要满足 Go 的 "),a("a",{attrs:{href:"https://golang.org/pkg/path/filepath/#Match",target:"_blank",rel:"noopener noreferrer"}},[s._v("filepath.Match"),a("OutboundLink")],1),s._v(" 规则")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json /mydir/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom* /mydir/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")]),s._v(".txt /mydir/\n")])])]),a("h3",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" add")]),s._v(" "),a("h3",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" cmd")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" top\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"top"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h3",{attrs:{id:"entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[s._v("#")]),s._v(" entrypoint")]),s._v(" "),a("p",[s._v("在运行时也可以替代，通过 "),a("code",[s._v("docker run")]),s._v(" 的参数 "),a("code",[s._v("--entrypoint")]),s._v(" 来指定")]),s._v(" "),a("h2",{attrs:{id:"compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compose"}},[s._v("#")]),s._v(" compose")]),s._v(" "),a("h3",{attrs:{id:"install-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-2"}},[s._v("#")]),s._v(" install")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash 补全命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://raw.githubusercontent.com/docker/compose/1.27.4/contrib/completion/bash/docker-compose "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/bash_completion.d/docker-compose\n")])])]),a("h3",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[s._v("#")]),s._v(" command")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.docker.com/compose/startup-order/",target:"_blank",rel:"noopener noreferrer"}},[s._v("startup-order"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("options")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-f, --file FILE")]),s._v(" 指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定")]),s._v(" "),a("li",[a("code",[s._v("-p, --project-name NAME")]),s._v(" 指定项目名称，默认将使用所在目录名称作为项目名")]),s._v(" "),a("li",[a("code",[s._v("--x-networking")]),s._v(" 使用 Docker 的可拔插网络后端特性")]),s._v(" "),a("li",[a("code",[s._v("--x-network-driver DRIVER")]),s._v(" 指定网络后端的驱动，默认为 bridge")]),s._v(" "),a("li",[a("code",[s._v("--verbose")]),s._v(" 输出更多调试信息")]),s._v(" "),a("li",[a("code",[s._v("-v, --version")]),s._v(" 打印版本并退出")])]),s._v(" "),a("p",[s._v("command")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker-compose up\ndocker-compose down\ndocker-compose images\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);